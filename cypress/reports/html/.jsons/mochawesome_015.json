{
  "stats": {
    "suites": 4,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "start": "2023-08-15T13:39:18.148Z",
    "end": "2023-08-15T13:39:36.955Z",
    "duration": 18807,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d707e40b-e9f6-40f4-b628-ee537a47b887",
      "title": "",
      "fullFile": "cypress/e2e/Achats/Suppliers.cy.js",
      "file": "cypress/e2e/Achats/Suppliers.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2ec8b101-3477-45e1-91a0-f995acdac2ee",
          "title": "Suppliers",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get Suppliers ",
              "fullTitle": "Suppliers Get Suppliers ",
              "timedOut": null,
              "duration": 2374,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n    \"value\": \"cypress/e2e/Achats/Suppliers.cy.js\"\n  },\n  \"Test get Suppliers\"\n]",
              "code": "cy.GET_API('purchases/companies/' + Company + '/suppliers/', tt).then(Response => {\n  expect(Response.status).to.eq(200);\n  //var d =(JSON.stringify(Response.body))\n  var d = Response.body.items;\n  for (var index in d) {\n    id_suppliers = d[index].id;\n    //cy.log(d[index].id)\n  }\n  cy.addContext(\"Test get Suppliers\");\n});",
              "err": {},
              "uuid": "1fb4bac4-195a-4ab7-8f75-0da1bec1c9e1",
              "parentUUID": "2ec8b101-3477-45e1-91a0-f995acdac2ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Export a Supplier ",
              "fullTitle": "Suppliers Get Export a Supplier ",
              "timedOut": null,
              "duration": 382,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n    \"value\": \"cypress/e2e/Achats/Suppliers.cy.js\"\n  },\n  \"Test get Supplier export\"\n]",
              "code": "cy.GET_API('companies/' + Company + '/suppliers/export', tt).then(Response => {\n  var d = JSON.stringify(Response.body);\n  cy.log(d);\n  expect(Response.status).to.eq(404);\n  cy.addContext(\"Test get Supplier export\");\n});",
              "err": {},
              "uuid": "7d9b3fde-a603-4f76-81a1-129d39dd1e38",
              "parentUUID": "2ec8b101-3477-45e1-91a0-f995acdac2ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Post Supplier 201",
              "fullTitle": "Suppliers Post Supplier 201",
              "timedOut": null,
              "duration": 1052,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/Achats/Suppliers.cy.js\"\n}",
              "code": "cy.Post_API_With_Body('purchases/companies/' + Company + '/suppliers', tt, dt1['code201']).then(Response => {\n  expect(Response.status).to.eq(201);\n  cy.log(JSON.stringify(Response.body));\n  id_delete = Response.body[\"id\"];\n});",
              "err": {},
              "uuid": "9175bd55-72fa-497d-a28b-3e35356ccb16",
              "parentUUID": "2ec8b101-3477-45e1-91a0-f995acdac2ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get a Supplier List",
              "fullTitle": "Suppliers Get a Supplier List",
              "timedOut": null,
              "duration": 986,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n    \"value\": \"cypress/e2e/Achats/Suppliers.cy.js\"\n  },\n  \"Test get Suppliers668\"\n]",
              "code": "cy.GET_API('purchases/companies/' + Company + '/suppliers/' + id_delete, tt).then(Response => {\n  var d = JSON.stringify(Response.body);\n  cy.log(JSON.stringify(d));\n  expect(Response.status).to.eq(200);\n  cy.addContext(\"Test get Suppliers\" + id_suppliers);\n});",
              "err": {},
              "uuid": "fe5b1976-92f8-43e4-ba6b-8c0af5eadb1f",
              "parentUUID": "2ec8b101-3477-45e1-91a0-f995acdac2ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete Supplier 201",
              "fullTitle": "Suppliers Delete Supplier 201",
              "timedOut": null,
              "duration": 1010,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/Achats/Suppliers.cy.js\"\n}",
              "code": "cy.DELETE_API('purchases/companies/' + Company + '/suppliers/' + id_delete, tt).then(Response => {\n  expect(Response.status).to.eq(204);\n  cy.log(JSON.stringify(Response.body));\n  id_delete = Response.body[\"id\"];\n});",
              "err": {},
              "uuid": "203fae71-1927-4f86-933b-229b480bfcb1",
              "parentUUID": "2ec8b101-3477-45e1-91a0-f995acdac2ee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "af723315-1409-4129-8461-a0d1e8c11c86",
              "title": "Rules",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Post Supplier 400 France",
                  "fullTitle": "Suppliers Rules Post Supplier 400 France",
                  "timedOut": null,
                  "duration": 319,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/Achats/Suppliers.cy.js\"\n}",
                  "code": "cy.Post_API_With_Body('purchases/companies/' + Company + '/suppliers', tt, dt1['code201_France_Not_Siret']).then(Response => {\n  cy.log(JSON.stringify(Response.body));\n  expect(Response.status).to.eq(400);\n  //id_suppliers_france = ((Response.body[\"id\"]))\n});",
                  "err": {},
                  "uuid": "761d05d0-a48a-475f-9ed4-12befe9120d3",
                  "parentUUID": "af723315-1409-4129-8461-a0d1e8c11c86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Post Supplier 201 France",
                  "fullTitle": "Suppliers Rules Post Supplier 201 France",
                  "timedOut": null,
                  "duration": 1130,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/Achats/Suppliers.cy.js\"\n}",
                  "code": "cy.Post_API_With_Body('purchases/companies/' + Company + '/suppliers', tt, dt1['code201_France']).then(Response => {\n  cy.log(JSON.stringify(Response.body));\n  expect(Response.status).to.eq(201);\n  id_suppliers_france = Response.body[\"id\"];\n});",
                  "err": {},
                  "uuid": "c92d2a65-6c73-475e-8a0d-5e7e5da71a1f",
                  "parentUUID": "af723315-1409-4129-8461-a0d1e8c11c86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Get data about the siret",
                  "fullTitle": "Suppliers Rules Get data about the siret",
                  "timedOut": null,
                  "duration": 489,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/Achats/Suppliers.cy.js\"\n}",
                  "code": "cy.GET_API('purchases/siret-database/31761525000014', tt).then(Response => {\n  expect(Response.status).to.eq(400);\n  //var d =(JSON.stringify(Response.body))\n  cy.log(Response.body);\n});",
                  "err": {},
                  "uuid": "0e5d9357-dfa4-41b9-a8ab-0d22dd3b6878",
                  "parentUUID": "af723315-1409-4129-8461-a0d1e8c11c86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Post Supplier 201 With contacts",
                  "fullTitle": "Suppliers Rules Post Supplier 201 With contacts",
                  "timedOut": null,
                  "duration": 1128,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/Achats/Suppliers.cy.js\"\n}",
                  "code": "cy.Post_API_With_Body('purchases/companies/' + Company + '/suppliers', tt, dt1['Code201SuppliersComplete']).then(Response => {\n  cy.log(JSON.stringify(Response.body));\n  expect(Response.status).to.eq(201);\n  id_suppliers_contacts = Response.body[\"id\"];\n});",
                  "err": {},
                  "uuid": "652e9837-7f6b-4bf1-8912-eb632da91f65",
                  "parentUUID": "af723315-1409-4129-8461-a0d1e8c11c86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Post Supplier 201 With paymentInfo",
                  "fullTitle": "Suppliers Rules Post Supplier 201 With paymentInfo",
                  "timedOut": null,
                  "duration": 1412,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/Achats/Suppliers.cy.js\"\n}",
                  "code": "cy.Post_API_With_Body('purchases/companies/' + Company + '/suppliers', tt, dt1['Code201SupplierspaymentInfo']).then(Response => {\n  cy.log(JSON.stringify(Response.body));\n  expect(Response.status).to.eq(201);\n  id_suppliers_paymentInfo = Response.body[\"id\"];\n});",
                  "err": {},
                  "uuid": "d278eeee-b702-4660-a166-a93ba2e02b03",
                  "parentUUID": "af723315-1409-4129-8461-a0d1e8c11c86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Post Supplier 403 Invalid Token",
                  "fullTitle": "Suppliers Rules Post Supplier 403 Invalid Token",
                  "timedOut": null,
                  "duration": 322,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/Achats/Suppliers.cy.js\"\n}",
                  "code": "cy.Post_API_With_Body('purchases/companies/' + Company + '/suppliers', \"555\", dt1['code201_France']).then(Response => {\n  cy.log(JSON.stringify(Response.body));\n  expect(Response.status).to.eq(403);\n});",
                  "err": {},
                  "uuid": "9c042e41-60f0-4c07-ba6a-648dcaacaff3",
                  "parentUUID": "af723315-1409-4129-8461-a0d1e8c11c86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Post Supplier 401 Not Authorized",
                  "fullTitle": "Suppliers Rules Post Supplier 401 Not Authorized",
                  "timedOut": null,
                  "duration": 335,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/Achats/Suppliers.cy.js\"\n}",
                  "code": "cy.Post_API_With_Body('purchases/companies/' + Company + '/suppliers', \"Bearer eJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbkBmaWR1Y2lhbC5jb20iLCJleHAiOjE2ODc4NjIyODAsInR5cGUiOiJGQUNJTElBIn0.eO8UAdnxQ7YvDez-F3IuCOg3jvF6mEsPbTcpxNXNchiBzA7MOhy-_zexgC4nWhV-Ysqh7KbXEjUwvCf4PexmuA\", dt1['code201_France']).then(Response => {\n  cy.log(JSON.stringify(Response.body));\n  expect(Response.status).to.eq(401);\n});",
                  "err": {},
                  "uuid": "f9444959-e22f-496b-b901-70055639c025",
                  "parentUUID": "af723315-1409-4129-8461-a0d1e8c11c86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Post Supplier 404 Not Found",
                  "fullTitle": "Suppliers Rules Post Supplier 404 Not Found",
                  "timedOut": null,
                  "duration": 340,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/Achats/Suppliers.cy.js\"\n}",
                  "code": "cy.Post_API_With_Body('purchases/companies/' + Company + '/supplier', tt, dt1['code201_France']).then(Response => {\n  cy.log(JSON.stringify(Response.body));\n  expect(Response.status).to.eq(404);\n});",
                  "err": {},
                  "uuid": "9f310118-ab87-4793-b152-03a0b4ede49a",
                  "parentUUID": "af723315-1409-4129-8461-a0d1e8c11c86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Post Supplier 400 Malformaed",
                  "fullTitle": "Suppliers Rules Post Supplier 400 Malformaed",
                  "timedOut": null,
                  "duration": 446,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "{\n  \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n  \"value\": \"cypress/e2e/Achats/Suppliers.cy.js\"\n}",
                  "code": "cy.Post_API_With_Body('purchases/companies/' + Company + '/suppliers', tt, dt1['code400_Malformed']).then(Response => {\n  cy.log(JSON.stringify(Response.body));\n  expect(Response.status).to.eq(400);\n});",
                  "err": {},
                  "uuid": "fc946b26-d8f4-457f-bddb-8455f6bbe8de",
                  "parentUUID": "af723315-1409-4129-8461-a0d1e8c11c86",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "761d05d0-a48a-475f-9ed4-12befe9120d3",
                "c92d2a65-6c73-475e-8a0d-5e7e5da71a1f",
                "0e5d9357-dfa4-41b9-a8ab-0d22dd3b6878",
                "652e9837-7f6b-4bf1-8912-eb632da91f65",
                "d278eeee-b702-4660-a166-a93ba2e02b03",
                "9c042e41-60f0-4c07-ba6a-648dcaacaff3",
                "f9444959-e22f-496b-b901-70055639c025",
                "9f310118-ab87-4793-b152-03a0b4ede49a",
                "fc946b26-d8f4-457f-bddb-8455f6bbe8de"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5921,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "1fb4bac4-195a-4ab7-8f75-0da1bec1c9e1",
            "7d9b3fde-a603-4f76-81a1-129d39dd1e38",
            "9175bd55-72fa-497d-a28b-3e35356ccb16",
            "fe5b1976-92f8-43e4-ba6b-8c0af5eadb1f",
            "203fae71-1927-4f86-933b-229b480bfcb1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5804,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5a930712-f4dd-470d-9745-45406eea9029",
          "title": "Supplier Notes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get Supplier Families List Notes",
              "fullTitle": "Supplier Notes Get Supplier Families List Notes",
              "timedOut": null,
              "duration": 2282,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n    \"value\": \"cypress/e2e/Achats/Suppliers.cy.js\"\n  },\n  \"Test get Supplier Family\"\n]",
              "code": "cy.GET_API('purchases/companies/' + Company + '/suppliers/' + ID_TESTE + '/notes', tt).then(Response => {\n  var d = JSON.stringify(Response.body);\n  cy.log(JSON.stringify(d));\n  expect(Response.status).to.eq(200);\n  cy.addContext(\"Test get Supplier Family\");\n});\nit('Post Supplier Families List Notes 201', () => {\n  cy.Post_API_With_Body('purchases/companies/' + Company + '/suppliers/' + ID_TESTE + '/notes', tt, dt1['code201_notes']).then(Response => {\n    var d = JSON.stringify(Response.body);\n    cy.log(JSON.stringify(d));\n    expect(Response.status).to.eq(201);\n    cy.addContext(\"Test get Supplier Family\");\n  });\n});",
              "err": {},
              "uuid": "b21c3af0-e4e1-471a-913b-a906ec47b540",
              "parentUUID": "5a930712-f4dd-470d-9745-45406eea9029",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "12ba2e1f-4eda-49b8-93dd-26e68004d8f0",
              "title": "OCR",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get documents references list 404",
                  "fullTitle": "Supplier Notes OCR Get documents references list 404",
                  "timedOut": null,
                  "duration": 4686,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-passed\",\n    \"value\": \"cypress/e2e/Achats/Suppliers.cy.js\"\n  },\n  \"Test get Supplier Family\"\n]",
                  "code": "cy.GET_API('ocr/documents-references', tt).then(Response => {\n  var d = JSON.stringify(Response.body);\n  cy.log(JSON.stringify(d));\n  expect(Response.status).to.eq(401);\n  cy.addContext(\"Test get Supplier Family\");\n});",
                  "err": {},
                  "uuid": "3c8447eb-5afe-43b2-9001-e49f5ef5f314",
                  "parentUUID": "12ba2e1f-4eda-49b8-93dd-26e68004d8f0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3c8447eb-5afe-43b2-9001-e49f5ef5f314"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4686,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "b21c3af0-e4e1-471a-913b-a906ec47b540"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2282,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportPageTitle": "Fiducial API Test",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports/html/.jsons"
      },
      "version": "6.2.0"
    }
  }
}